name: test build
on: [push]
jobs:
    build:
        runs-on: ubuntu-latest
        environment: deployment
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v3

          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v1
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: us-west-1

          - name: Install Python
            uses: actions/setup-python@v3
            with:
              python-version: '3.7'

          - name: Install Dependencies
            run: | 
              sudo pip install -r requirements.txt
              sudo pip install awscli coverage

          - name: Setup Mosek License File
            run: |
              sudo mkdir /root/mosek
              mkdir $HOME/mosek
              aws s3 cp s3://slac.gismo.ci.artifacts/mosek.license/mosek.lic $HOME/mosek/mosek.lic
              sudo cp $HOME/mosek/mosek.lic /root/mosek/mosek.lic

          - name: Run Unit Tests
            run: sudo coverage run -m unittest

    deploy-pypi:
        needs: build
        runs-on: ubuntu-latest
        environment: deployment
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v3

          - name: Install Python
            uses: actions/setup-python@v3
            with:
              python-version: '3.7'

          - name: Install Twine
            run: sudo pip install twine

          - name: Create the distribution
            run: sudo python setup.py sdist bdist_wheel

          - name: Push to PyPI
            run: sudo twine upload -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_PASSWORD }} dist/*

    deploy-conda:
        needs: build
        runs-on: ubuntu-latest
        environment: deployment
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v3

          - name: Install the Conda Dependencies
            run: | 
              wget https://repo.anaconda.com/miniconda/Miniconda3-4.7.10-Linux-x86_64.sh -O miniconda.sh
              bash miniconda.sh -b -p "$HOME"/miniconda
              source /home/runner/miniconda/etc/profile.d/conda.sh
              conda activate base
              conda config --set always_yes yes --set auto_update_conda false
              conda update conda
              conda install conda-build

          - name: Build the Anaconda Package
            run: |
              source /home/runner/miniconda/etc/profile.d/conda.sh
              conda activate base
              conda install anaconda-client
              conda config --set anaconda_upload no
              anaconda login --username ${{ secrets.ANACONDA_CLOUD_USERNAME }} --password ${{ secrets.ANACONDA_CLOUD_PASSWORD }}
              VERSION_FROM_GIT_TAG=`git tag --list "v*[0-9]" --sort=version:refname | tail -1 | cut -c 2-` conda build . -c conda-forge --numpy 1.16.4

          - name: Get the output path and upload the package
            run: |
              source /home/runner/miniconda/etc/profile.d/conda.sh
              conda activate base
              VERSION_FROM_GIT_TAG=`git tag --list "v*[0-9]" --sort=version:refname | tail -1 | cut -c 2-`
              anaconda upload -u slacgismo  /home/runner/miniconda/conda-bld/noarch/solar-data-tools-$VERSION_FROM_GIT_TAG-*.tar.bz2